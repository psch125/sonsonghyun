데이터 베이스 개론

데이터 베이스 설계의 과정
1단계 요구 사항 분석
2단계 개념적 설계
3단계 논리적 
4단계 물리적 설계
5단계 구현

<요구 사항 분석>
사용자들이 데이터베이스에 원하는 것이 무엇인지를 분석한다. 즉, 데이터 베이스에 대한 사용자들의 요구 사항을 수집하고
분석하여, 개발할 데이터베이스의 용도를 명확히 파악하는 게  이 단계의 목적이다.

1. 주요 사용자들의 범위부터 결정해야 한다.
2. 해당 사용자가 조직에서 수행하는 업무를 분석해야 한다.
사용자의 업무와 관련해 필요한 데이터가 무엇이고, 그 데이터에 어떤 처리가 필요한지 등에 초점을 맞춰 요구 사항들을 수집하고 분석

<개념적 설계>
사용자 요구 사항에 대해 분석한 결과를 바탕으로 데이터베이스에 저장해둘 필요가 있다고 판단되는 데이터 요소를 추출하고
데이터 요소 간의 관계를 파악하여 이를 표현한 것이다 >> E-R 모델 사용

개념적 모델링을 하려면 E-R 모델의 핵심 요소인 개체를 추출해야 한다.
그다음 각 개체의 주요 속성과 키 속성을 선별하고, 개체간의 관계를 결정해야 한다.
개체, 속성, 관계를 선별하는 작업이 모두 완료되면 E-R 다이어그램으로 표현한다.

개체와 속성 추출)
개체는 현실 세계에서 어떤 조직을 운영하는데 꼭 필요한 사람, 사물과 같이 구별되는 모든 것을 의미한다.
즉, 개체는 저장할 만한 가치가 있는 중요 데이터를 지닌 사람이나 사물 등이며, 개념적으로 모델링하는데 가장 중요한 요소
>> 대부분 요구 사항의 문장들에서 명사로 표현되어 있다.

관계 추출) 
관계는 개체 간의 의미 있는 연관성이다.
일반적으로 관계는 요구 사항을 표현한 문장에서 동사로 표현한다.
단, 조직의 업무처리와 관련하여 개체 간의 연관성을 의미 있게 표현한 동사만 선택하고, 의미가 같은 동사가 여러 개이면 대표 동사 하나만 선택

매핑 카디널리티 >> 일대일, 일대다, 다대다 중 하나로 분류

E-R 다이어그램에서 관계는 마름모로 표현하고, 사각형으로 표현된 개체와 선으로 연결한다
그리고 일대일, 일대다, 다대다 관계는 선 위에 레이블로 표시한다. 
필수적으로 참여하는 개체는 개체와 관계를 이중선으로 연결한다.

<논리적 설계>
논리적 설계에서는 DBMS에 적합한 논리적 데이터 모델을 이용해서, 개념적 설계 단계에서
생성한 스키마를 기반으로 논리적 스키마를 설계한다.
즉, DBMS에 독립적인 개념적 스키마를 기반으로 하여 개발에 사용할 DBMS가 처리할 수 있는 데이터베이스의
논리적 구조를 설계하는 것이 논리적 설계 단계의 목표이다

E-R 다이어 그램을 릴레이션 스키마로 변환하는 일은 쉽지않다.
E-R 모델과 관계 데이터 모델은 표현이 많이 다르기 때문이다. E-R모델에서는 개체와 관계를 구분하지만 
관계데이터 모델에서는 개체와 관계를 구분하지 않고 모두 릴레이션으로 표현한다.
그리고 E-R 모델에서는 다중 값 속성이나 복합 속성의 표현을 허용하지만, 관계 데이터 모델에서는 허용하지 않는다.

<릴레이션 스키마 변환 규칙>
규칙1. 모든개체는 릴레이션으로 변환한다.
E-R 다이어그램의 각 개체를 하나의 릴레이션으로 변환한다. 개체의 이름을 릴레이션의 이름으로 하고,
개체가 가진 속성도 릴레이션 속성으로 그대로 변환한다. 단, 개체가 가지고 있는 속성이 복합 속성인 경우에는 복합 속성을
구성하고 있는 단순 속성만 릴레이션의 속성으로 변환한다. 개체가 가지고 있는 키 속성은 릴레이션의 기본키로 변환한다.

규칙2. 다대다(N대N) 관계는 릴레이션으로 변환한다.
관계의 이름을 릴레이션의 이름으로 하고, 관계의 속성도 릴레이션의 속성으로 그대로 변환한다.
단, 관계를 맺고 있는 개체가 무엇인지 중요하므로, 관계를 맺고 있는 개체들을 규칙1에 따라 변환한 후 
이 릴레이션들의 기본키를 관계 릴레이션에 포함시키고 외래키로 지정한다. 
그리고 외래키들을 조합하여 관계 릴레이션의 기본키로 지정한다.
개체를 변환한 릴레이션의 기본키를 외래키로 지정할 때는 가져온 기본키들의 이름이 같을 경우 하나는 이름을 변경해야 한다.
한 릴레이션에 있는 속성은 이름이 모두 달라야 하기 때문이다.
하지만 속성의 이름만 달라질 뿐 속성의 도메인은 변하지 않으므로 외래키로 사용하는 데 문제가 되지 않는다.

규칙3. 일대다 관계는 외래키로 표현한다
일대다 관계는 릴레이션으로 변환하지 않고 외래키로만 표현한다. 단, 약한 개체가 참여하는 일대다 관계는 일반 개체가 
참여하는 경우와 다르게 처리해야 하므로 규칙3을 다음과 같이 2개의 세부 규칙으로 나눠서 적용한다

규칙 3-1) 일반적인 일대다 관계는 외래키로 표현한다
일반 개체들이 참여하는 일대다 관계는 릴레이션으로 변환하지 않고 외래키로만 표현한다.
관계를 맺고 있는 개체들을 규칙 1 에 따라 변환한 릴레이션 중에서, 일대다 관계는 1측 개체 릴레이션의 기본키를 가져와
N측 개체 릴레이션에 포함시키고 외래키로 지정한다.
관계의 속성들도 N측 개체 릴레이션에 포함시킨다. 단, 외래키나 관계의 속성을 포함시킬 때 해당 릴레이션의 
원래 개체 속성과 이름이 같으면 이름을 변경해야 한다.

만약 N측 개체 릴레이션의 기본키를 가져와 1측 개체 릴레이션에 외래키로 포함시키면 해당 외래키가 다중 값을 가져
릴레이션의 특성을 위반하게 된다. 그러므로 반드시 1측 개체 릴레이션의 기본키를 N측 개체 릴레이션의 외래키로 지정해야 한다.

규칙 3-2) 약한 개체가 참여하는 일대다 관계는 외래키를 포함해서 기본키로 지정한다
약한 개체가 참여하는 일대다 관계도 릴레이션으로 변환하지 않고 외래키로만 표현한다.
일반 개체들이 참여하는 일대다 관계처럼 관계를 맺고 있는 개체들을 규칙 1에 따라 릴레이션으로 변환한다
이때, 일대다 관계의 1측 개체 릴레이션의 기본키를 가져와 N측 개체 릴레이션에 포함시키고 외래키로 지정한다.
관계의 속성들도 N측 개체 릴레이션에 포함시킨다.

일반 개체들이 참여하는 일대다 관계와 다른점은, 외래키가 포함된 릴레이션에서 이 외래키를 포함하여 기본키를 지정해야 한다는
점이다. 즉, N측 개체 릴레이션이 가지고 있던 키속성과 외래키 속성을 조합하여 기본키로 지정한다.
약한 개체는 오너 개체에 따라 존재 여부가 결정되는 만큼 오너 개체의 기본키를 이용해 식별하는 것이다.
그러므로 오너인 1측 개체 릴레이션의 기본키를 포함해서 약한 개체의 기본키를 지정한다.

규칙 4. 일대일 관계를 외래키로 표현한다
E-R 다이어그램에 있는 일대일 관계도 일대다 관계처럼 릴레이션으로 변환하지 않고 외래키로만 표현한다.
이때, 데이터의 중복을 피하려면 개체가 관계에 참여하는 특성에 따라 약간 다르게 처리해야 하므로 
규칙4를 3개의 세부 규칙으로 나눠서 적용한다

규칙4-1)
일반적인 일대일 관계는 릴레이션으로 변환하지 않고 외래키로만 표현한다.
관계를 맺는 개체들을 규칙1에 따라 변환한 릴레이션들이 서로의 기본키를 주고받아 이를 외래키로 지정한다.
이때, 관계가 가지는 속성들은 관계에 참여하는 개체를 변환한 릴레이션에 모두 포함시킨다

규칙4-2) 일대일 관계에 필수적으로 참여하는 개체의 릴레이션만 외래키를 받는다
일대일 관계를 맺고 있는 두 개체 중 관계에 필수적으로 참여하는 개체에 대응하는 릴레이션에만
외래키를 포함시킨다. 즉, 관계에 필수적으로 참여하는 개체에 해당하는 릴레이션이 선택적으로 참여하는 개체에
해당하는 릴레이션의 기본키를 받아 외래키로 지정한다.
이때, 관계가 가지고 있는 속성들도 관계에 필수적으로 참여하는 개체에 해당하는 릴레이션에 함께 포함시킨다.

규칙4-3) 모든 개체가 일대일 관계에 필수적으로 참여하면 릴레이션 하나로 합친다
일대일 관계를 맺고 있는 두 개체가 관계에 필수적으로 참여한다면 그만큼 관련성이 있는 개체라는 의미이다.
그러므로 두 개체에 해당하는 두 릴레이션을 하나로 합쳐 표현한다.
관계의 이름을 릴레이션 이름으로 사용하고, 관계에 참여하는 두 개체의 속성들도 관계 릴레이션에 모두 포함시킨다
그리고 두 개체의 릴레이션의 키 속성을 조합하여 관계 릴레이션의 기본키로 지정한다

규칙 5. 다중 값 속성은 릴레이션으로 변환한다
관계 데이터 모델의 릴레이션에서는 다중 값을 가지는 속성을 허용하지 않는다. 
그러므로 E-R 다이어그램에 있는 다중 값 속성은 그 속성을 가지고 있는 개체에 해당하는 릴레이션이 
아닌 별도의 릴레이션을 만들어 포함시킨다. 새로 만들어진 릴레이션에는 E-R 다이어그램에서 다중 값 속성으로
표현된 속성뿐 아니라 그 속성을 가지고 있는 개체에 해당하는 릴레이션의 기본키를 가져와 포함시키고
이를 외래키로 지정한다. 새로 만들어진 릴레이션의 이름은 자유롭게 정하고, 기본키는 다중 값 속성과 외래키를 조합하여 지정한다















































































